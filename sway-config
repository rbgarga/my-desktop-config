# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

#xwayland enable

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term alacritty
set $lock swaylock -f -c 000000
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu dmenu-wl_path | dmenu-wl | xargs swaymsg exec --

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/local/share/backgrounds/sway/)
output * bg /usr/local/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
#
exec swayidle -w \
         timeout 300 'swaylock -f -c 000000' \
         timeout 600 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
         before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.
input * {
    xkb_rules evdev
    xkb_layout "us,us"
    xkb_variant ",intl"
    xkb_options "caps:swapescape,grp:win_space_toggle"
}
input "2:7:SynPS/2_Synaptics_TouchPad" {
    dwt enabled
    tap enabled
    natural_scroll enabled
    middle_emulation enabled
}

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    bindsym $mod+d exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'

    # Lock the screen manually
    bindsym $mod+Shift+Return exec $lock
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Use meaningfull workspace names
    set $ws1 "1"
    set $ws2 "2"
    set $ws3 "3"
    set $ws4 "4: Mail"
    set $ws5 "5: WWW"
    set $ws6 "6: Chat"
    set $ws7 "7"
    set $ws8 "8"
    set $ws9 "9"
    set $ws10 "10"
    # Switch to workspace
    bindsym $mod+1 workspace $ws1
    bindsym $mod+2 workspace $ws2
    bindsym $mod+3 workspace $ws3
    bindsym $mod+4 workspace $ws4
    bindsym $mod+5 workspace $ws5
    bindsym $mod+6 workspace $ws6
    bindsym $mod+7 workspace $ws7
    bindsym $mod+8 workspace $ws8
    bindsym $mod+9 workspace $ws9
    bindsym $mod+0 workspace $ws10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace $ws1
    bindsym $mod+Shift+2 move container to workspace $ws2
    bindsym $mod+Shift+3 move container to workspace $ws3
    bindsym $mod+Shift+4 move container to workspace $ws4
    bindsym $mod+Shift+5 move container to workspace $ws5
    bindsym $mod+Shift+6 move container to workspace $ws6
    bindsym $mod+Shift+7 move container to workspace $ws7
    bindsym $mod+Shift+8 move container to workspace $ws8
    bindsym $mod+Shift+9 move container to workspace $ws9
    bindsym $mod+Shift+0 move container to workspace $ws10
    # Preferred output for each workspace
    workspace $ws1 output HDMI-1 LVDS-1
    workspace $ws2 output HDMI-1 LVDS-1
    workspace $ws3 output HDMI-1 LVDS-1
    workspace $ws4 output HDMI-1 LVDS-1
    workspace $ws5 output HDMI-1 LVDS-1
    workspace $ws6 output LVDS-1
    workspace $ws7 output LVDS-1
    workspace $ws8 output LVDS-1
    workspace $ws9 output LVDS-1
    workspace $ws10 output LVDS-1
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+semicolon splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"
bindsym $mod+u [urgent=latest] focus

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
    position top

    # When the status_command prints a new line to stdout, swaybar updates.
    # The default just shows the current date and time.
    #status_command while date +'%Y-%m-%d %X'; do sleep 1; done
    status_command i3status

    colors {
        statusline #ffffff
        background #323232
        inactive_workspace #32323200 #32323200 #5c5c5c
    }
}

# clipboard manager
exec wl-paste -p --watch cliphist store
bindsym $mod+shift+v exec cliphist list | dmenu-wl | cliphist decode | wl-copy

# Assign programs to specific workspace
assign [app_id="thunderbird"] workspace $ws4
assign [app_id="firefox"] workspace $ws5
assign [app_id="weechat"] workspace $ws6
assign [app_id="org.telegram"] workspace $ws6
assign [app_id="Slack"] workspace $ws6
assign [app_id="WhatsApp"] workspace $ws6

for_window [app_id="WhatsApp"] layout tabbed
for_window [app_id="Slack"] layout tabbed
for_window [app_id="org.telegram"] layout tabbed
for_window [app_id="weechat"] layout tabbed

set $thunderbird_cmd "~/bin/launcher.sh -c thunderbird -C /usr/local/bin/thunderbird"
set $firefox_cmd "~/bin/launcher.sh -c firefox -C /usr/local/bin/firefox"
set $weechat_cmd "~/bin/launcher.sh -c weechat -C ~/bin/weechat.sh -t"
set $telegram_cmd "~/bin/launcher.sh -c org.telegram -C /usr/local/bin/telegram-desktop"
set $slack_cmd "~/bin/launcher.sh -c Slack -C '/usr/local/bin/midori --name Slack -a https://netgate.slack.com'"
set $whatsapp_cmd "~/bin/launcher.sh -c WhatsApp -C '/usr/local/bin/midori --name WhatsApp -a https://web.whatsapp.com'"

bindsym XF86AudioMute exec --no-startup-id "~/bin/vol.sh toggle"
bindsym XF86AudioRaiseVolume exec --no-startup-id "~/bin/vol.sh up"
bindsym XF86AudioLowerVolume exec --no-startup-id "~/bin/vol.sh down"

bindsym $mod+i exec --no-startup-id $weechat_cmd
bindsym $mod+m exec --no-startup-id $thunderbird_cmd
bindsym $mod+b exec --no-startup-id $firefox_cmd
bindsym $mod+n exec --no-startup-id $slack_cmd
bindsym $mod+t exec --no-startup-id $telegram_cmd
bindsym $mod+comma exec --no-startup-id $whatsapp_cmd

include /usr/local/etc/sway/config.d/*
